MODULE Module1
    CONST robtarget home:=[[905.329241265,-0.000355201,1097.158035643],[0.499995645,0.000004566,0.866027918,-0.00000192],[0,-1,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget Pick:=[[-855.650481109,-879.6815735,538.26500977],[0.459420878,-0.557005308,-0.545328613,0.425786622],[-2,0,-2,1],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget Drop:=[[1070.124956816,-226.534384055,961.94271237],[0.426943892,-0.44080113,0.561394557,-0.555202151],[-1,0,-2,1],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget Clr_pt:=[[337.642338862,-882.982367871,1027.910963078],[0.114842297,-0.123329667,0.70135775,-0.692602589],[-1,0,-2,1],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR num counter:=0;     !Counter, its purpose is run the "if statement" only in the first cycle
    
PROC main()
    counter:=counter+1;
    IF counter=1 THEN       !first sequence, should send PPNP and Robot home no matter what 
        ResetDOs;
        PPNP_Home;
        Robot_Home;
    ENDIF
    IF DI1=0 Robot_Home;
    IF DI7=0 PPNP_Home;  !DI7 1 when PPNP is HOME, just moving to home
    Request_Part;
    !Wait DI12 moved to the first line of PPNP_Sequence
    PPNP_Sequence;
    Color_Sorting; 
    Robot_Home;
    counter:=1;
ENDPROC 

PROC Robot_Home () 
    Movej home, v800, z50, Servo\WObj:=wobj0;
    WaitDI DI1,1;      !Wait Robot home
ENDPROC 

PROC Request_Part()
    PulseDO DO13;           !Reset color
    PulseDO DO12;           !Conveyor, request part
ENDPROC

PROC Color_Sorting ()
    Pick_up;
    MoveJ Clr_pt, v500, z200, Servo\WObj:=wobj0;
    IF DI13=1 AND DI14=0 THEN 
        Yellow;
    ELSEIF DI14=1 AND DI13=0 THEN
        Red;
    ELSE
        Invalid;
    ENDIF
    Robot_Home;
ENDPROC 

PROC PPNP_Home ()
    PPNP_GRIPO;
    PPNP_RET;
    PPNP_SWING_CONV;
    PPNP_DOWN; 
    WaitDI DI7,1;   !PPNP home
ENDPROC 

PROC PPNP_Sequence ()
    WaitDI DI12,1; !same idea as WaitDI DI16 on Pick_up
    PPNP_EXTEND;  
    PPNP_GRIPC; 
    PPNP_UP;
    PPNP_RET; 
    PPNP_SWING_STAND; 
    PPNP_EXTEND;
    PPNP_DOWN;
    PPNP_GRIPO;
    PPNP_UP;
    PPNP_HOME; 
ENDPROC

PROC Pick_up () 
    WaitDI DI16, 1;         !Part present on stand, professor suggested this change
    Open_grip; 
    MoveJ offs(Pick, 0, 0, 120), v800, z50, Servo\WObj:=wobj0; 
    MoveJ offs(Pick, 0, 0, 80), v200, z0, Servo\WObj:=wobj0;        !Use z0 for drop and pick to move the robot at the exact desired position without stop, professor suggested this change and explained
    MoveL Pick, v100, fine, Servo;      !Use less speed at picking the object and displacing it to drop point because the object may fall, professor suggested this change and explained.
    Close_grip; 
    MoveL offs(Pick, 0, 0, 80), v100, z50, Servo\WObj:=wobj0;
ENDPROC

PROC Open_grip() 
    Reset DO1; 
    Waittime 1; 
ENDPROC

PROC Close_grip ()
    Set DO1; 
    Waittime 1; 
ENDPROC 

  !!! COLOR MOVEMENTS !!!

PROC Yellow ()
    MoveJ Offs(Drop,0,213,50),v200,z0,Servo\WObj:=wobj0;
    MoveL Offs(Drop,0,213,0),v100,fine,Servo\WObj:=wobj0;
    Open_grip; 
ENDPROC

PROC Red () 
    MoveJ Offs(Drop,0,0,80),v200,z0,Servo\WObj:=wobj0;
    MoveL Drop,v100,fine,Servo\WObj:=wobj0;
    Open_grip; 
ENDPROC

PROC Invalid () 
    MoveJ Offs(Drop,0,426,50),v200,z50,Servo\WObj:=wobj0;
    MoveL Offs(Drop,0,426,0),v100,fine,Servo\WObj:=wobj0;
    Open_grip; 
ENDPROC 

PROC PPNP_UP () 
    Reset DO6;
    WaitDO DO6,0;
    Set DO5; 
    WaitTime 1; 
ENDPROC 
PROC PPNP_DOWN () 
    Reset DO5;
    WaitDO DO5,0;
    Set DO6; 
    WaitTime 1; 
ENDPROC
PROC PPNP_SWING_STAND () 
    Reset DO8;
    WaitDO DO8,0;
    Set DO7; 
    WaitTime 1; 
ENDPROC
PROC PPNP_SWING_CONV () 
    Reset DO7;
    WaitDO DO7,0;
    Set DO8; 
    WaitTime 1; 
ENDPROC 
PROC PPNP_EXTEND () 
    Reset DO10;
    WaitDO DO10,0;
    Set DO9; 
    WaitTime 1; 
ENDPROC 
PROC PPNP_RET () 
    Reset DO9;
    WaitDO DO9,0;
    Set DO10; 
    WaitTime 0.5; 
ENDPROC 
PROC PPNP_GRIPO () 
    Reset DO11;
    WaitTime 1; 
ENDPROC 
PROC PPNP_GRIPC () 
    Set DO11; 
    WaitTime 1; 
ENDPROC 

!------------DUMMY-------------------

PROC Teach()        !simplifying points, reducing the space in the memory (hypothesis: maybe this put more load on the CPU)
    MoveL Pick,v1000,z100,Servo\WObj:=wobj0;
    MoveL Clr_pt,v1000,z100,Servo\WObj:=wobj0;
    MoveL Drop,v1000,z100,Servo\WObj:=wobj0;
    MoveL home,v1000,z100,Servo\WObj:=wobj0;
ENDPROC

!------Set everything for run the program---------

PROC ResetDOs () !-------------Avoid signal conflicts, better reset everything
        Reset DO1;
        Reset DO2;
        Reset DO3;
        Reset DO4;
        Reset DO5;
        Reset DO6;
        Reset DO7;
        Reset DO8;
        Reset DO9;
        Reset DO10;
        Reset DO11;
        Reset DO12;
        Reset DO13;
        Reset DO14;
        Reset DO15;
        Reset DO16;
        WaitTime .3;    !Wait one PLC cycle
        Set DO5;        !Set Default DOs, reset DO12 NOT setting DO12
        Set DO8;
        Set DO10;
    ENDPROC
ENDMODULE
